akka {
  #    loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = INFO
  #    log-config-on-start="on"

  #    actor {
  #        provider = "cluster"
  #    }
  #
  #    remote {
  #        netty.tcp.port = 4711
  #    }
}

distml {
  num-workers = "1"
  num-workers = ${?DISTML_NUM_WORKERS}
 # network-queuing-type = "FirstInFirstOut"
  network-queuing-type = "SmallestIterationFirst"
  network-queuing-type = ${?DISTML_QUEUE_TYPE}
}


experiment {
  exp-seed = "1"
}

data {
  base-folder = "/Users/yyao39/Documents/IdeaProjects/dist-criteo/data"
  base-folder = ${?DISTML_DATA_DIR}
  dataset = "criteo"
  dataset = ${?DISTML_DATASET}
  num-features = "16777216"
}

server {

  fifo-dispatcher {
    type = PinnedDispatcher
    executor = "thread-pool-executor"
    mailbox-type = "akka.dispatch.UnboundedMailbox"
    throughput = 1
  }

  smallest-iteration-first-dispatcher {
    type = PinnedDispatcher
    executor = "thread-pool-executor"
    mailbox-type = "edu.distml.mailboxes.IterationPriorityMailbox"
    throughput = 1
  }

  message-process-interval = "250"
  messages-per-second = "10"
}

worker {
  fifo-dispatcher {
    mailbox-type = "akka.dispatch.UnboundedMailbox"
  }

  delay {
    type = "Pareto"
    type = ${?DISTML_DELAY_TYPE}
    uniform {
      low = 0
      low = ${?DISTML_DELAY_UNIFORM_LOW}
      high = 4
      high = ${?DISTML_DELAY_UNIFORM_HIGH}
    }

    exponential {
      lambda = 0.5
      lambda = ${?DISTML_DELAY_EXP_LAMBDA}
    }

    pareto {
      xm = 1
      xm = ${?DISTML_DELAY_PARETO_XM}
      alpha = 1
      alpha = ${?DISTML_DELAY_PARETO_ALPHA}
    }
  }

}

sgd {
  mini-batch-size = "10"
  mini-batch-size = ${?SGD_MINI_BATCH_SIZE}
  max-iterations = "200"
  max-iterations = ${?SGD_MAX_ITERATIONS}
  learning-rate = "0.01"
  learning-rate = ${?SGD_LEARNING_RATE}
  time-limit = "5" # in minutes
  time-limit = ${?SGD_TIME_LIMIT}
}


